// ***************************************************************************************
// *
// *    Core       | Everything within this document is proprietary to Core Dynamics.
// *    Dynamics   | Any unauthorized duplication will be subject to prosecution.
// *
// *    Department : (R+D)^2                        Name: gadgets_automobile.cpp
// *       Sub Dept: Programming
// *    Location ID: 856-45B
// *                                                      (c) 2856 - 2858 Core Dynamics
// ***************************************************************************************

#ifndef GADGETS_AUTOMOBILE_CPP
#define GADGETS_AUTOMOBILE_CPP

#include "gadgets_automobile.h"

using namespace std;

// -------------------------------------------------------------------------------------
//  Panel Class

void AUTOMOBILE_GADGET::create()
{
  // Build Display Window
  AUTOMOBILE_PANEL.PROP.SIZEY = PROP.SIZEY;
  AUTOMOBILE_PANEL.PROP.SIZEX = PROP.SIZEX;
  AUTOMOBILE_PANEL.PROP.POSY = PROP.POSY;
  AUTOMOBILE_PANEL.PROP.POSX = PROP.POSX;
  AUTOMOBILE_PANEL.PROP.COLOR = COLOR_WHITE;
  AUTOMOBILE_PANEL.PROP.BCOLOR = COLOR_BLACK;

  AUTOMOBILE_PANEL.create();

  Text_Field_Properties temp_prop;
  Text_Field_Properties temp_prop_2;

  //TEST.set_color(COLOR_RED, COLOR_WHITE);

  temp_prop.POSX = 0;
  temp_prop.POSY = 1;
  temp_prop.SIZEX = 30;
  temp_prop.COLORS_ON = true;
  temp_prop.BCOLOR = COLOR_BLACK;
  temp_prop.COLOR = COLOR_WHITE;
  temp_prop.JUSTIFICATION_LEFT = true;

  MESSAGES.PROP = temp_prop;

  AD_260.PROP = temp_prop;
  AD_2C0.PROP = temp_prop;
  AD_190.PROP = temp_prop;

  AD_UNKNOWN.PROP = temp_prop;

  MESSAGES.PROP.POSY = 0;

  AD_260.PROP.POSY = 3;
  AD_2C0.PROP.POSY = 4;
  AD_190.PROP.POSY = 5;

  AD_UNKNOWN.PROP.POSY = 24;

  //-----------

  // Speed and Gear Raw Data
  AD_F0.PROP.POSX = 30;
  AD_F0.PROP.POSY = 2;
  AD_F0.PROP.SIZEX = 30;
  AD_F0.PROP.COLORS_ON = true;
  AD_F0.PROP.BCOLOR = COLOR_BLACK;
  AD_F0.PROP.COLOR = COLOR_WHITE;
  AD_F0.PROP.JUSTIFICATION_LEFT = true;

  // Speed Guage
  SPEEDOMETER.PROP.LABEL = "";
  SPEEDOMETER.PROP.INDICATOR_CHARACTER = '0';
  SPEEDOMETER.PROP.LABEL_SIZE = 0;
  SPEEDOMETER.PROP.COLOR = COLOR_WHITE;
  SPEEDOMETER.PROP.BCOLOR = COLOR_BLACK;
  SPEEDOMETER.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  SPEEDOMETER.PROP.COLOR_MARKER = COLOR_BLUE;
  SPEEDOMETER.PROP.BCOLOR_MARKER = COLOR_WHITE;
  SPEEDOMETER.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  SPEEDOMETER.PROP.POSY = 3;
  SPEEDOMETER.PROP.POSX = 30;
  SPEEDOMETER.PROP.BAR_SIZE = 42;
  SPEEDOMETER.PROP.GUAGE_BAR = true;
  SPEEDOMETER.PROP.MAX_VALUE = 75;
  SPEEDOMETER.PROP.MIN_VALUE = 0;
  SPEEDOMETER.PROP.MIN_MAX = true;
  SPEEDOMETER.PROP.MIN_MAX_FILLER = true;
  SPEEDOMETER.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  SPEEDOMETER.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  SPEEDOMETER.PROP.MIN_MAX_INDICATORS = false;
  SPEEDOMETER.MIN_MAX_HISTORY.PROP.SLICES = 20;
  SPEEDOMETER.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  SPEEDOMETER.PROP.PRINT_VALUE = false;
  SPEEDOMETER.PROP.PRINT_MIN = true;
  SPEEDOMETER.PROP.PRINT_MAX = true;
  SPEEDOMETER.PROP.COLORS_ON = true;

  //Speed Text
  SPEED.PROP.POSX = 30;
  SPEED.PROP.POSY = 4;
  SPEED.PROP.SIZEX = 5;
  SPEED.PROP.COLORS_ON = true;
  SPEED.PROP.BCOLOR = COLOR_BLACK;
  SPEED.PROP.COLOR = COLOR_WHITE;
  SPEED.PROP.JUSTIFICATION_LEFT = true;

  //Gear Text
  GEAR.PROP.POSX = 37;
  GEAR.PROP.POSY = 4;
  GEAR.PROP.SIZEX = 10;
  GEAR.PROP.COLORS_ON = true;
  GEAR.PROP.BCOLOR = COLOR_BLACK;
  GEAR.PROP.COLOR = COLOR_WHITE;
  GEAR.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // Steering Wheel Raw Data
  AD_10.PROP.POSX = 30;
  AD_10.PROP.POSY = 6;
  AD_10.PROP.SIZEX = 30;
  AD_10.PROP.COLORS_ON = true;
  AD_10.PROP.BCOLOR = COLOR_BLACK;
  AD_10.PROP.COLOR = COLOR_WHITE;
  AD_10.PROP.JUSTIFICATION_LEFT = true;

  // Steering Wheel Guage
  STEERING_WHEEL.PROP.LABEL = "";
  STEERING_WHEEL.PROP.INDICATOR_CHARACTER = '0';
  STEERING_WHEEL.PROP.LABEL_SIZE = 0;
  STEERING_WHEEL.PROP.COLOR = COLOR_WHITE;
  STEERING_WHEEL.PROP.BCOLOR = COLOR_BLACK;
  STEERING_WHEEL.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  STEERING_WHEEL.PROP.COLOR_MARKER = COLOR_BLUE;
  STEERING_WHEEL.PROP.BCOLOR_MARKER = COLOR_WHITE;
  STEERING_WHEEL.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  STEERING_WHEEL.PROP.POSY = 7;
  STEERING_WHEEL.PROP.POSX = 30;
  STEERING_WHEEL.PROP.BAR_SIZE = 20;
  STEERING_WHEEL.PROP.GUAGE_BAR = true;
  STEERING_WHEEL.PROP.MAX_VALUE = 360;
  STEERING_WHEEL.PROP.MIN_VALUE = 0;
  STEERING_WHEEL.PROP.MIN_MAX = false;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER = true;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  STEERING_WHEEL.PROP.MIN_MAX_INDICATORS = false;
  STEERING_WHEEL.MIN_MAX_HISTORY.PROP.SLICES = 20;
  STEERING_WHEEL.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  STEERING_WHEEL.PROP.COLORS_ON = true;

  // Steering Wheel Angle Text
  STEERING_WHEEL_ANGLE.PROP.POSX = 30;
  STEERING_WHEEL_ANGLE.PROP.POSY = 8;
  STEERING_WHEEL_ANGLE.PROP.SIZEX = 20;
  STEERING_WHEEL_ANGLE.PROP.COLORS_ON = true;
  STEERING_WHEEL_ANGLE.PROP.BCOLOR = COLOR_BLACK;
  STEERING_WHEEL_ANGLE.PROP.COLOR = COLOR_WHITE;
  STEERING_WHEEL_ANGLE.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // RPM Raw Data
  AD_90.PROP.POSX = 60;
  AD_90.PROP.POSY = 6;
  AD_90.PROP.SIZEX = 30;
  AD_90.PROP.COLORS_ON = true;
  AD_90.PROP.BCOLOR = COLOR_BLACK;
  AD_90.PROP.COLOR = COLOR_WHITE;
  AD_90.PROP.JUSTIFICATION_LEFT = true;

  // RPM Guage
  RPM_GUAGE.PROP.LABEL = "";
  RPM_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  RPM_GUAGE.PROP.LABEL_SIZE = 0;
  RPM_GUAGE.PROP.COLOR = COLOR_WHITE;
  RPM_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  RPM_GUAGE.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  RPM_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  RPM_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  RPM_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  RPM_GUAGE.PROP.POSY = 7;
  RPM_GUAGE.PROP.POSX = 60;
  RPM_GUAGE.PROP.BAR_SIZE = 20;
  RPM_GUAGE.PROP.GUAGE_BAR = true;
  RPM_GUAGE.PROP.MAX_VALUE = 4000;
  RPM_GUAGE.PROP.MIN_VALUE = 0;
  RPM_GUAGE.PROP.MIN_MAX = true;
  RPM_GUAGE.PROP.MIN_MAX_FILLER = true;
  RPM_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  RPM_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  RPM_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  RPM_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  RPM_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  RPM_GUAGE.PROP.COLORS_ON = true;

  // RPM Text
  RPM.PROP.POSX = 60;
  RPM.PROP.POSY = 8;
  RPM.PROP.SIZEX = 20;
  RPM.PROP.COLORS_ON = true;
  RPM.PROP.BCOLOR = COLOR_BLACK;
  RPM.PROP.COLOR = COLOR_WHITE;
  RPM.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // BRAKE PRESSURE Raw Data
  AD_80.PROP.POSX = 30;
  AD_80.PROP.POSY = 10;
  AD_80.PROP.SIZEX = 30;
  AD_80.PROP.COLORS_ON = true;
  AD_80.PROP.BCOLOR = COLOR_BLACK;
  AD_80.PROP.COLOR = COLOR_WHITE;
  AD_80.PROP.JUSTIFICATION_LEFT = true;

  // Power Load Guage
  POWER_LOAD_GUAGE.PROP.LABEL = "";
  POWER_LOAD_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  POWER_LOAD_GUAGE.PROP.LABEL_SIZE = 0;
  POWER_LOAD_GUAGE.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD_GUAGE.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_RED;
  POWER_LOAD_GUAGE.PROP.POSY = 11;
  POWER_LOAD_GUAGE.PROP.POSX = 30;
  POWER_LOAD_GUAGE.PROP.BAR_SIZE = 20;
  POWER_LOAD_GUAGE.PROP.GUAGE_BAR = true;
  POWER_LOAD_GUAGE.PROP.MAX_VALUE = 300;
  POWER_LOAD_GUAGE.PROP.MIN_VALUE = 0;
  POWER_LOAD_GUAGE.PROP.MIN_MAX = false;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER = true;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  POWER_LOAD_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  POWER_LOAD_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  POWER_LOAD_GUAGE.PROP.COLORS_ON = true;

  // BRAKE PRESSURE Text
  POWER_LOAD.PROP.POSX = 30;
  POWER_LOAD.PROP.POSY = 12;
  POWER_LOAD.PROP.SIZEX = 20;
  POWER_LOAD.PROP.COLORS_ON = true;
  POWER_LOAD.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // ACCELERATOR_POSITION Raw Data
  AD_x0.PROP.POSX = 60;
  AD_x0.PROP.POSY = 10;
  AD_x0.PROP.SIZEX = 30;
  AD_x0.PROP.COLORS_ON = true;
  AD_x0.PROP.BCOLOR = COLOR_BLACK;
  AD_x0.PROP.COLOR = COLOR_WHITE;
  AD_x0.PROP.JUSTIFICATION_LEFT = true;

  // ACCELERATOR_POSITION Guage
  ACCELERATOR_POSITION_GUAGE.PROP.LABEL = "";
  ACCELERATOR_POSITION_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  ACCELERATOR_POSITION_GUAGE.PROP.LABEL_SIZE = 0;
  ACCELERATOR_POSITION_GUAGE.PROP.COLOR = COLOR_WHITE;
  ACCELERATOR_POSITION_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  ACCELERATOR_POSITION_GUAGE.PROP.COLOR_BAR_BACK = COLOR_RED;
  ACCELERATOR_POSITION_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  ACCELERATOR_POSITION_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  ACCELERATOR_POSITION_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_BLUE;
  ACCELERATOR_POSITION_GUAGE.PROP.POSY = 11;
  ACCELERATOR_POSITION_GUAGE.PROP.POSX = 60;
  ACCELERATOR_POSITION_GUAGE.PROP.BAR_SIZE = 20;
  ACCELERATOR_POSITION_GUAGE.PROP.GUAGE_BAR = true;
  ACCELERATOR_POSITION_GUAGE.PROP.MAX_VALUE = 100;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_VALUE = 0;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_MAX = false;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_MAX_FILLER = true;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  ACCELERATOR_POSITION_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  ACCELERATOR_POSITION_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  ACCELERATOR_POSITION_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  ACCELERATOR_POSITION_GUAGE.PROP.COLORS_ON = true;

  // ACCELERATION  Text
  ACCELERATOR_POSITION.PROP.POSX = 60;
  ACCELERATOR_POSITION.PROP.POSY = 12;
  ACCELERATOR_POSITION.PROP.SIZEX = 20;
  ACCELERATOR_POSITION.PROP.COLORS_ON = true;
  ACCELERATOR_POSITION.PROP.BCOLOR = COLOR_BLACK;
  ACCELERATOR_POSITION.PROP.COLOR = COLOR_WHITE;
  ACCELERATOR_POSITION.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // TEMP COOLANT  Raw Data
  AD_x1.PROP.POSX = 60;
  AD_x1.PROP.POSY = 10;
  AD_x1.PROP.SIZEX = 30;
  AD_x1.PROP.COLORS_ON = true;
  AD_x1.PROP.BCOLOR = COLOR_BLACK;
  AD_x1.PROP.COLOR = COLOR_WHITE;
  AD_x1.PROP.JUSTIFICATION_LEFT = true;

  // TEMP COOLANT Guage
  TEMP_COOLANT_GUAGE.PROP.LABEL = "";
  TEMP_COOLANT_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  TEMP_COOLANT_GUAGE.PROP.LABEL_SIZE = 0;
  TEMP_COOLANT_GUAGE.PROP.COLOR = COLOR_WHITE;
  TEMP_COOLANT_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  TEMP_COOLANT_GUAGE.PROP.COLOR_BAR_BACK = COLOR_RED;
  TEMP_COOLANT_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  TEMP_COOLANT_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  TEMP_COOLANT_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_BLUE;
  TEMP_COOLANT_GUAGE.PROP.POSY = 11;
  TEMP_COOLANT_GUAGE.PROP.POSX = 60;
  TEMP_COOLANT_GUAGE.PROP.BAR_SIZE = 20;
  TEMP_COOLANT_GUAGE.PROP.GUAGE_BAR = true;
  TEMP_COOLANT_GUAGE.PROP.MAX_VALUE = 100;
  TEMP_COOLANT_GUAGE.PROP.MIN_VALUE = 0;
  TEMP_COOLANT_GUAGE.PROP.MIN_MAX = false;
  TEMP_COOLANT_GUAGE.PROP.MIN_MAX_FILLER = true;
  TEMP_COOLANT_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  TEMP_COOLANT_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  TEMP_COOLANT_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  TEMP_COOLANT_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  TEMP_COOLANT_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  TEMP_COOLANT_GUAGE.PROP.COLORS_ON = true;

  // TEMP COOLANT Text
  TEMP_COOLANT.PROP.POSX = 60;
  TEMP_COOLANT.PROP.POSY = 12;
  TEMP_COOLANT.PROP.SIZEX = 20;
  TEMP_COOLANT.PROP.COLORS_ON = true;
  TEMP_COOLANT.PROP.BCOLOR = COLOR_BLACK;
  TEMP_COOLANT.PROP.COLOR = COLOR_WHITE;
  TEMP_COOLANT.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // TEMP COOLANT  Raw Data
  AD_x2.PROP.POSX = 30;
  AD_x2.PROP.POSY = 14;
  AD_x2.PROP.SIZEX = 30;
  AD_x2.PROP.COLORS_ON = true;
  AD_x2.PROP.BCOLOR = COLOR_BLACK;
  AD_x2.PROP.COLOR = COLOR_WHITE;
  AD_x2.PROP.JUSTIFICATION_LEFT = true;

  // TEMP COOLANT Guage
  FUEL_LEVEL_GUAGE.PROP.LABEL = "";
  FUEL_LEVEL_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  FUEL_LEVEL_GUAGE.PROP.LABEL_SIZE = 0;
  FUEL_LEVEL_GUAGE.PROP.COLOR = COLOR_WHITE;
  FUEL_LEVEL_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  FUEL_LEVEL_GUAGE.PROP.COLOR_BAR_BACK = COLOR_RED;
  FUEL_LEVEL_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  FUEL_LEVEL_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  FUEL_LEVEL_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_BLUE;
  FUEL_LEVEL_GUAGE.PROP.POSY = 15;
  FUEL_LEVEL_GUAGE.PROP.POSX = 30;
  FUEL_LEVEL_GUAGE.PROP.BAR_SIZE = 20;
  FUEL_LEVEL_GUAGE.PROP.GUAGE_BAR = true;
  FUEL_LEVEL_GUAGE.PROP.MAX_VALUE = 100;
  FUEL_LEVEL_GUAGE.PROP.MIN_VALUE = 0;
  FUEL_LEVEL_GUAGE.PROP.MIN_MAX = false;
  FUEL_LEVEL_GUAGE.PROP.MIN_MAX_FILLER = true;
  FUEL_LEVEL_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  FUEL_LEVEL_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  FUEL_LEVEL_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  FUEL_LEVEL_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  FUEL_LEVEL_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  FUEL_LEVEL_GUAGE.PROP.COLORS_ON = true;

  // TEMP COOLANT Text
  FUEL_LEVEL.PROP.POSX = 30;
  FUEL_LEVEL.PROP.POSY = 16;
  FUEL_LEVEL.PROP.SIZEX = 20;
  FUEL_LEVEL.PROP.COLORS_ON = true;
  FUEL_LEVEL.PROP.BCOLOR = COLOR_BLACK;
  FUEL_LEVEL.PROP.COLOR = COLOR_WHITE;
  FUEL_LEVEL.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // Raw Data
  AD_C8.PROP.POSX = 15;
  AD_C8.PROP.POSY = 18;
  AD_C8.PROP.SIZEX = 70;
  AD_C8.PROP.COLORS_ON = true;
  AD_C8.PROP.BCOLOR = COLOR_BLACK;
  AD_C8.PROP.COLOR = COLOR_WHITE;
  AD_C8.PROP.JUSTIFICATION_LEFT = true;

  AD_D0.PROP.POSX = 15;
  AD_D0.PROP.POSY = 19;
  AD_D0.PROP.SIZEX = 70;
  AD_D0.PROP.COLORS_ON = true;
  AD_D0.PROP.BCOLOR = COLOR_BLACK;
  AD_D0.PROP.COLOR = COLOR_WHITE;
  AD_D0.PROP.JUSTIFICATION_LEFT = true;

  AD_130.PROP.POSX = 15;
  AD_130.PROP.POSY = 20;
  AD_130.PROP.SIZEX = 70;
  AD_130.PROP.COLORS_ON = true;
  AD_130.PROP.BCOLOR = COLOR_BLACK;
  AD_130.PROP.COLOR = COLOR_WHITE;
  AD_130.PROP.JUSTIFICATION_LEFT = true;

  AD_200.PROP.POSX = 15;
  AD_200.PROP.POSY = 21;
  AD_200.PROP.SIZEX = 70;
  AD_200.PROP.COLORS_ON = true;
  AD_200.PROP.BCOLOR = COLOR_BLACK;
  AD_200.PROP.COLOR = COLOR_WHITE;
  AD_200.PROP.JUSTIFICATION_LEFT = true;

  AD_380.PROP.POSX = 15;
  AD_380.PROP.POSY = 22;
  AD_380.PROP.SIZEX = 70;
  AD_380.PROP.COLORS_ON = true;
  AD_380.PROP.BCOLOR = COLOR_BLACK;
  AD_380.PROP.COLOR = COLOR_WHITE;
  AD_380.PROP.JUSTIFICATION_LEFT = true;

  AD_218.PROP.POSX = 15;
  AD_218.PROP.POSY = 23;
  AD_218.PROP.SIZEX = 70;
  AD_218.PROP.COLORS_ON = true;
  AD_218.PROP.BCOLOR = COLOR_BLACK;
  AD_218.PROP.COLOR = COLOR_WHITE;
  AD_218.PROP.JUSTIFICATION_LEFT = true;

  AD_C0.PROP.POSX = 15;
  AD_C0.PROP.POSY = 24;
  AD_C0.PROP.SIZEX = 70;
  AD_C0.PROP.COLORS_ON = true;
  AD_C0.PROP.BCOLOR = COLOR_BLACK;
  AD_C0.PROP.COLOR = COLOR_WHITE;
  AD_C0.PROP.JUSTIFICATION_LEFT = true;

  AD_360.PROP.POSX = 15;
  AD_360.PROP.POSY = 25;
  AD_360.PROP.SIZEX = 70;
  AD_360.PROP.COLORS_ON = true;
  AD_360.PROP.BCOLOR = COLOR_BLACK;
  AD_360.PROP.COLOR = COLOR_WHITE;
  AD_360.PROP.JUSTIFICATION_LEFT = true;

  LF_SPEED.PROP.POSX = 5;
  LF_SPEED.PROP.POSY = 15;
  LF_SPEED.PROP.SIZEX = 5;
  LF_SPEED.PROP.COLORS_ON = true;
  LF_SPEED.PROP.BCOLOR = COLOR_BLACK;
  LF_SPEED.PROP.COLOR = COLOR_WHITE;
  LF_SPEED.PROP.JUSTIFICATION_LEFT = true;

  RF_SPEED.PROP.POSX = 10;
  RF_SPEED.PROP.POSY = 15;
  RF_SPEED.PROP.SIZEX = 5;
  RF_SPEED.PROP.COLORS_ON = true;
  RF_SPEED.PROP.BCOLOR = COLOR_BLACK;
  RF_SPEED.PROP.COLOR = COLOR_WHITE;
  RF_SPEED.PROP.JUSTIFICATION_LEFT = true;

  LB_SPEED.PROP.POSX = 5;
  LB_SPEED.PROP.POSY = 16;
  LB_SPEED.PROP.SIZEX = 5;
  LB_SPEED.PROP.COLORS_ON = true;
  LB_SPEED.PROP.BCOLOR = COLOR_BLACK;
  LB_SPEED.PROP.COLOR = COLOR_WHITE;
  LB_SPEED.PROP.JUSTIFICATION_LEFT = true;

  RB_SPEED.PROP.POSX = 10;
  RB_SPEED.PROP.POSY = 16;
  RB_SPEED.PROP.SIZEX = 5;
  RB_SPEED.PROP.COLORS_ON = true;
  RB_SPEED.PROP.BCOLOR = COLOR_BLACK;
  RB_SPEED.PROP.COLOR = COLOR_WHITE;
  RB_SPEED.PROP.JUSTIFICATION_LEFT = true;

}

void AUTOMOBILE_GADGET::update(system_data &sdSysData, unsigned long &tmeCurrentMillis)
{

  sdSysData.CAR_INFO.translate();
  
  //--

  MESSAGES.set_text(to_string(sdSysData.CAR_INFO.message_count));

  AD_260.set_text(sdSysData.CAR_INFO.DATA.AD_260.ORIG);
  AD_2C0.set_text(sdSysData.CAR_INFO.DATA.AD_2C0.ORIG);
  AD_190.set_text(sdSysData.CAR_INFO.DATA.AD_190.ORIG);

  AD_UNKNOWN.set_text(sdSysData.CAR_INFO.DATA.AD_UNKNOWN.ORIG);

  //-----------

  AD_F0.set_text(sdSysData.CAR_INFO.DATA.AD_F0.ORIG);
  SPEEDOMETER.update(sdSysData.CAR_INFO.STATUS.SPEED.val_mph() / 10, tmeCurrentMillis);
  SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.mph());
  GEAR.set_text(sdSysData.CAR_INFO.STATUS.GEAR.long_desc());

  //-----------

  AD_10.set_text(sdSysData.CAR_INFO.DATA.AD_10.ORIG);
  STEERING_WHEEL.update(sdSysData.CAR_INFO.STATUS.STEERING.val_steering_wheel_angle(), tmeCurrentMillis);
  STEERING_WHEEL_ANGLE.set_text(sdSysData.CAR_INFO.STATUS.STEERING.turning_direction() + " " + 
                                  sdSysData.CAR_INFO.STATUS.STEERING.steering_wheel_angle());
  //-----------

  AD_90.set_text(sdSysData.CAR_INFO.DATA.AD_90.ORIG);
  RPM_GUAGE.update(sdSysData.CAR_INFO.STATUS.RPM.val_rpm(), tmeCurrentMillis);
  RPM.set_text(sdSysData.CAR_INFO.STATUS.RPM.rpm());

  //-----------

  AD_80.set_text(sdSysData.CAR_INFO.DATA.AD_80.ORIG);
  POWER_LOAD_GUAGE.update(sdSysData.CAR_INFO.STATUS.POWER.val_load(), tmeCurrentMillis);
  POWER_LOAD.set_text(sdSysData.CAR_INFO.STATUS.POWER.load());

  //-----------

  //AD_x0.set_text(sdSysData.CAR_INFO.DATA.AD_x0.ORIG);
  //ACCELERATOR_POSITION_GUAGE.update(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.val_pressure(), tmeCurrentMillis);
  //ACCELERATOR_POSITION.set_text(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.pressure());

  //-----------

  //AD_x0.set_text(sdSysData.CAR_INFO.DATA.AD_x1.ORIG);
  //TEMP_COOLANT_GUAGE.update(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.val_pressure(), tmeCurrentMillis);
  //TEMP_COOLANT.set_text(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.pressure());

  //-----------

  //AD_x2.set_text(sdSysData.CAR_INFO.DATA.AD_x1.ORIG);
  //FUEL_LEVEL_GUAGE.update(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.val_pressure(), tmeCurrentMillis);
  //FUEL_LEVEL.set_text(sdSysData.CAR_INFO.STATUS.BRAKE_PRESSURE.pressure());

  //-----------

  AD_C8.set_text("Lamp Ign PB: " + sdSysData.CAR_INFO.DATA.AD_C8.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.INDICATORS.lights() + " " + 
                                    sdSysData.CAR_INFO.STATUS.INDICATORS.parking_brake());
  AD_D0.set_text(" Gear Lever: " + sdSysData.CAR_INFO.DATA.AD_D0.ORIG);
  AD_130.set_text("      Speed: " + sdSysData.CAR_INFO.DATA.AD_130.ORIG);
  AD_200.set_text("  Fuel Cons: " + sdSysData.CAR_INFO.DATA.AD_200.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.consumed());
  AD_380.set_text(" Fuel Level: " + sdSysData.CAR_INFO.DATA.AD_380.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.level());
  AD_218.set_text("       Odom: " + sdSysData.CAR_INFO.DATA.AD_218.ORIG);
  AD_C0.set_text("      Fuel%: " + sdSysData.CAR_INFO.DATA.AD_C0.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.percentage());
  AD_360.set_text(" Drs and HB: " + sdSysData.CAR_INFO.DATA.AD_360.ORIG);

  //-----------

  LF_SPEED.set_text(" Drs and HB: " + sdSysData.CAR_INFO.STATUS.SPEED.LF_mph());
  RF_SPEED.set_text(" Drs and HB: " + sdSysData.CAR_INFO.STATUS.SPEED.RF_mph());
  LB_SPEED.set_text(" Drs and HB: " + sdSysData.CAR_INFO.STATUS.SPEED.LB_mph());
  RB_SPEED.set_text(" Drs and HB: " + sdSysData.CAR_INFO.STATUS.SPEED.RB_mph());

  //-----------

  sdSysData.CAR_INFO.CHANGED = false;
  CHANGED = true;
}

bool AUTOMOBILE_GADGET::draw(bool Refresh, unsigned long tmeFrame_Time)
{
  if (CHANGED == false)
  {

  }

  MESSAGES.draw(AUTOMOBILE_PANEL, Refresh);

  AD_260.draw(AUTOMOBILE_PANEL, Refresh);
  AD_2C0.draw(AUTOMOBILE_PANEL, Refresh);
  AD_190.draw(AUTOMOBILE_PANEL, Refresh);

  AD_UNKNOWN.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------
  // Speedometer and Gear
  AD_F0.draw(AUTOMOBILE_PANEL, Refresh);
  SPEEDOMETER.draw(AUTOMOBILE_PANEL, Refresh);
  SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  GEAR.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  AD_10.draw(AUTOMOBILE_PANEL, Refresh);
  STEERING_WHEEL.draw(AUTOMOBILE_PANEL, Refresh);
  STEERING_WHEEL_ANGLE.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  AD_90.draw(AUTOMOBILE_PANEL, Refresh);
  RPM_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  RPM.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  AD_80.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  //AD_x0.draw(AUTOMOBILE_PANEL, Refresh);
  ACCELERATOR_POSITION_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  ACCELERATOR_POSITION.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  //AD_x1.draw(AUTOMOBILE_PANEL, Refresh);
  TEMP_COOLANT_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  TEMP_COOLANT.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  //AD_x2.draw(AUTOMOBILE_PANEL, Refresh);
  FUEL_LEVEL_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  FUEL_LEVEL.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  AD_C8.draw(AUTOMOBILE_PANEL, Refresh);
  AD_D0.draw(AUTOMOBILE_PANEL, Refresh);
  AD_130.draw(AUTOMOBILE_PANEL, Refresh);
  AD_200.draw(AUTOMOBILE_PANEL, Refresh);
  AD_380.draw(AUTOMOBILE_PANEL, Refresh);
  AD_218.draw(AUTOMOBILE_PANEL, Refresh);
  AD_C0.draw(AUTOMOBILE_PANEL, Refresh);
  AD_360.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  LF_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  RF_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  LB_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  RB_SPEED.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------


  AUTOMOBILE_PANEL.draw(Refresh);

  CHANGED = false;
  return false;
}


#endif