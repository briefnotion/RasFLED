// ***************************************************************************************
// *
// *    Core       | Everything within this document is proprietary to Core Dynamics.
// *    Dynamics   | Any unauthorized duplication will be subject to prosecution.
// *
// *    Department : (R+D)^2                        Name: gadgets_automobile.cpp
// *       Sub Dept: Programming
// *    Location ID: 856-45B
// *                                                      (c) 2856 - 2858 Core Dynamics
// ***************************************************************************************

#ifndef GADGETS_AUTOMOBILE_CPP
#define GADGETS_AUTOMOBILE_CPP

#include "gadgets_automobile.h"

using namespace std;

// -------------------------------------------------------------------------------------
//  Panel Class

void AUTOMOBILE_GADGET::create()
{
  // Build Display Window
  AUTOMOBILE_PANEL.PROP.SIZEY = PROP.SIZEY;
  AUTOMOBILE_PANEL.PROP.SIZEX = PROP.SIZEX;
  AUTOMOBILE_PANEL.PROP.POSY = PROP.POSY;
  AUTOMOBILE_PANEL.PROP.POSX = PROP.POSX;
  AUTOMOBILE_PANEL.PROP.COLOR = COLOR_WHITE;
  AUTOMOBILE_PANEL.PROP.BCOLOR = COLOR_BLACK;

  AUTOMOBILE_PANEL.create();

  AD_UNKNOWN.PROP.POSY = 0;
  AD_UNKNOWN.PROP.POSX = 30;
  AD_UNKNOWN.PROP.SIZEX = 30;
  AD_UNKNOWN.PROP.COLORS_ON = true;
  AD_UNKNOWN.PROP.BCOLOR = COLOR_BLACK;
  AD_UNKNOWN.PROP.COLOR = COLOR_WHITE;
  AD_UNKNOWN.PROP.JUSTIFICATION_LEFT = true;

  //-----------

  // Speed and Gear Raw Data
  SPEEDOMETER_DESC.PROP.POSX = 30;
  SPEEDOMETER_DESC.PROP.POSY = 1;
  SPEEDOMETER_DESC.PROP.SIZEX = 15;
  SPEEDOMETER_DESC.PROP.COLORS_ON = true;
  SPEEDOMETER_DESC.PROP.BCOLOR = COLOR_BLACK;
  SPEEDOMETER_DESC.PROP.COLOR = COLOR_WHITE;
  SPEEDOMETER_DESC.PROP.JUSTIFICATION_LEFT = true;
  SPEEDOMETER_DESC.set_text("Speedometer:");

  // Speed Guage
  SPEEDOMETER.PROP.LABEL = "";
  SPEEDOMETER.PROP.INDICATOR_CHARACTER = '0';
  SPEEDOMETER.PROP.LABEL_SIZE = 0;
  SPEEDOMETER.PROP.COLOR = COLOR_WHITE;
  SPEEDOMETER.PROP.BCOLOR = COLOR_BLACK;
  SPEEDOMETER.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  SPEEDOMETER.PROP.COLOR_MARKER = COLOR_BLUE;
  SPEEDOMETER.PROP.BCOLOR_MARKER = COLOR_WHITE;
  SPEEDOMETER.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  SPEEDOMETER.PROP.POSY = 2;
  SPEEDOMETER.PROP.POSX = 30;
  SPEEDOMETER.PROP.BAR_SIZE = 45;
  SPEEDOMETER.PROP.GUAGE_BAR = true;
  SPEEDOMETER.PROP.MAX_VALUE = 75;
  SPEEDOMETER.PROP.MIN_VALUE = 0;
  SPEEDOMETER.PROP.MIN_MAX = true;
  SPEEDOMETER.PROP.MIN_MAX_FILLER = true;
  SPEEDOMETER.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  SPEEDOMETER.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  SPEEDOMETER.PROP.MIN_MAX_INDICATORS = false;
  SPEEDOMETER.MIN_MAX_HISTORY.PROP.SLICES = 20;
  SPEEDOMETER.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  SPEEDOMETER.PROP.COLORS_ON = true;
  SPEEDOMETER.PROP.PRINT_VALUE = false;
  SPEEDOMETER.PROP.PRINT_MIN = false;
  SPEEDOMETER.PROP.PRINT_MAX = false;

  //Speed Text
  SPEED.PROP.POSX = 58;
  SPEED.PROP.POSY = 1;
  SPEED.PROP.SIZEX = 5;
  SPEED.PROP.COLORS_ON = true;
  SPEED.PROP.BCOLOR = COLOR_BLACK;
  SPEED.PROP.COLOR = COLOR_WHITE;
  SPEED.PROP.JUSTIFICATION_LEFT = true;

  //Gear Text
  GEAR.PROP.POSX = 65;
  GEAR.PROP.POSY = 1;
  GEAR.PROP.SIZEX = 10;
  GEAR.PROP.COLORS_ON = true;
  GEAR.PROP.BCOLOR = COLOR_BLACK;
  GEAR.PROP.COLOR = COLOR_WHITE;
  GEAR.PROP.JUSTIFICATION_LEFT = true;

  //Speed MIN Text
  SPEEDOMETER_MIN.PROP.POSX = 50;
  SPEEDOMETER_MIN.PROP.POSY = 1;
  SPEEDOMETER_MIN.PROP.SIZEX = 5;
  SPEEDOMETER_MIN.PROP.COLORS_ON = true;
  SPEEDOMETER_MIN.PROP.BCOLOR = COLOR_BLACK;
  SPEEDOMETER_MIN.PROP.COLOR = COLOR_WHITE;
  SPEEDOMETER_MIN.PROP.JUSTIFICATION_LEFT = true;

  //Speed MAN Text
  SPEEDOMETER_MAX.PROP.POSX = 72;
  SPEEDOMETER_MAX.PROP.POSY = 1;
  SPEEDOMETER_MAX.PROP.SIZEX = 5;
  SPEEDOMETER_MAX.PROP.COLORS_ON = true;
  SPEEDOMETER_MAX.PROP.BCOLOR = COLOR_BLACK;
  SPEEDOMETER_MAX.PROP.COLOR = COLOR_WHITE;
  SPEEDOMETER_MAX.PROP.JUSTIFICATION_RIGHT = true;

  //-----------

  // Speed and Gear Raw Data
  RPM_DESC.PROP.POSX = 30;
  RPM_DESC.PROP.POSY = 4;
  RPM_DESC.PROP.SIZEX = 15;
  RPM_DESC.PROP.COLORS_ON = true;
  RPM_DESC.PROP.BCOLOR = COLOR_BLACK;
  RPM_DESC.PROP.COLOR = COLOR_WHITE;
  RPM_DESC.PROP.JUSTIFICATION_LEFT = true;
  RPM_DESC.set_text("Tachometer:");

  // RPM Guage
  RPM_GUAGE.PROP.LABEL = "";
  RPM_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  RPM_GUAGE.PROP.LABEL_SIZE = 0;
  RPM_GUAGE.PROP.COLOR = COLOR_WHITE;
  RPM_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  RPM_GUAGE.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  RPM_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  RPM_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  RPM_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  RPM_GUAGE.PROP.POSY = 5;
  RPM_GUAGE.PROP.POSX = 30;
  RPM_GUAGE.PROP.BAR_SIZE = 45;
  RPM_GUAGE.PROP.GUAGE_BAR = true;
  RPM_GUAGE.PROP.MAX_VALUE = 4000;
  RPM_GUAGE.PROP.MIN_VALUE = 0;
  RPM_GUAGE.PROP.MIN_MAX = true;
  RPM_GUAGE.PROP.MIN_MAX_FILLER = true;
  RPM_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  RPM_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  RPM_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  RPM_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  RPM_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  RPM_GUAGE.PROP.COLORS_ON = true;
  RPM_GUAGE.PROP.PRINT_VALUE = false;
  RPM_GUAGE.PROP.PRINT_MIN = false;
  RPM_GUAGE.PROP.PRINT_MAX = false;

  // RPM Text
  RPM.PROP.POSX = 60;
  RPM.PROP.POSY = 4;
  RPM.PROP.SIZEX = 10;
  RPM.PROP.COLORS_ON = true;
  RPM.PROP.BCOLOR = COLOR_BLACK;
  RPM.PROP.COLOR = COLOR_WHITE;
  RPM.PROP.JUSTIFICATION_LEFT = true;

  //RPM MIN Text
  RPM_MIN.PROP.POSX = 50;
  RPM_MIN.PROP.POSY = 4;
  RPM_MIN.PROP.SIZEX = 5;
  RPM_MIN.PROP.COLORS_ON = true;
  RPM_MIN.PROP.BCOLOR = COLOR_BLACK;
  RPM_MIN.PROP.COLOR = COLOR_WHITE;
  RPM_MIN.PROP.JUSTIFICATION_LEFT = true;

  //RPM MAN Text
  RPM_MAX.PROP.POSX = 72;
  RPM_MAX.PROP.POSY = 4;
  RPM_MAX.PROP.SIZEX = 5;
  RPM_MAX.PROP.COLORS_ON = true;
  RPM_MAX.PROP.BCOLOR = COLOR_BLACK;
  RPM_MAX.PROP.COLOR = COLOR_WHITE;
  RPM_MAX.PROP.JUSTIFICATION_RIGHT = true;
  
  //-----------

  // Power Load Raw Data
  POWER_LOAD_DESC.PROP.POSX = 30;
  POWER_LOAD_DESC.PROP.POSY = 7;
  POWER_LOAD_DESC.PROP.SIZEX = 15;
  POWER_LOAD_DESC.PROP.COLORS_ON = true;
  POWER_LOAD_DESC.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD_DESC.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD_DESC.PROP.JUSTIFICATION_LEFT = true;
  POWER_LOAD_DESC.set_text("Torque:");

  // Power Load Guage
  POWER_LOAD_GUAGE.PROP.LABEL = "";
  POWER_LOAD_GUAGE.PROP.INDICATOR_CHARACTER = '0';
  POWER_LOAD_GUAGE.PROP.LABEL_SIZE = 0;
  POWER_LOAD_GUAGE.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD_GUAGE.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.COLOR_MARKER = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.BCOLOR_MARKER = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.COLOR_MARKER_LIMIT = COLOR_RED;
  POWER_LOAD_GUAGE.PROP.POSY = 8;
  POWER_LOAD_GUAGE.PROP.POSX = 30;
  POWER_LOAD_GUAGE.PROP.BAR_SIZE = 45;
  POWER_LOAD_GUAGE.PROP.GUAGE_BAR = true;
  POWER_LOAD_GUAGE.PROP.MAX_VALUE = 300;
  POWER_LOAD_GUAGE.PROP.MIN_VALUE = 0;
  POWER_LOAD_GUAGE.PROP.MIN_MAX = true;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER = true;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  POWER_LOAD_GUAGE.PROP.MIN_MAX_INDICATORS = false;
  POWER_LOAD_GUAGE.MIN_MAX_HISTORY.PROP.SLICES = 20;
  POWER_LOAD_GUAGE.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  POWER_LOAD_GUAGE.PROP.COLORS_ON = true;
  POWER_LOAD_GUAGE.PROP.COLORS_ON = true;
  POWER_LOAD_GUAGE.PROP.PRINT_VALUE = false;
  POWER_LOAD_GUAGE.PROP.PRINT_MIN = false;
  POWER_LOAD_GUAGE.PROP.PRINT_MAX = false;

  // Power Load Text
  POWER_LOAD.PROP.POSX = 60;
  POWER_LOAD.PROP.POSY = 7;
  POWER_LOAD.PROP.SIZEX = 5;
  POWER_LOAD.PROP.COLORS_ON = true;
  POWER_LOAD.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD.PROP.JUSTIFICATION_LEFT = true;

  //Power Load MIN Text
  POWER_LOAD_MIN.PROP.POSX = 50;
  POWER_LOAD_MIN.PROP.POSY = 7;
  POWER_LOAD_MIN.PROP.SIZEX = 5;
  POWER_LOAD_MIN.PROP.COLORS_ON = true;
  POWER_LOAD_MIN.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD_MIN.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD_MIN.PROP.JUSTIFICATION_LEFT = true;

  //Power Load MAN Text
  POWER_LOAD_MAX.PROP.POSX = 72;
  POWER_LOAD_MAX.PROP.POSY = 7;
  POWER_LOAD_MAX.PROP.SIZEX = 5;
  POWER_LOAD_MAX.PROP.COLORS_ON = true;
  POWER_LOAD_MAX.PROP.BCOLOR = COLOR_BLACK;
  POWER_LOAD_MAX.PROP.COLOR = COLOR_WHITE;
  POWER_LOAD_MAX.PROP.JUSTIFICATION_RIGHT = true;

  //-----------

  // Steering Wheel Raw Data
  STEERING_WHEEL_DESC.PROP.POSX = 30;
  STEERING_WHEEL_DESC.PROP.POSY = 10;
  STEERING_WHEEL_DESC.PROP.SIZEX = 15;
  STEERING_WHEEL_DESC.PROP.COLORS_ON = true;
  STEERING_WHEEL_DESC.PROP.BCOLOR = COLOR_BLACK;
  STEERING_WHEEL_DESC.PROP.COLOR = COLOR_WHITE;
  STEERING_WHEEL_DESC.PROP.JUSTIFICATION_LEFT = true;
  STEERING_WHEEL_DESC.set_text("Steering Wheel:");

  // Steering Wheel Guage
  STEERING_WHEEL.PROP.LABEL = "";
  STEERING_WHEEL.PROP.INDICATOR_CHARACTER = '0';
  STEERING_WHEEL.PROP.LABEL_SIZE = 0;
  STEERING_WHEEL.PROP.COLOR = COLOR_WHITE;
  STEERING_WHEEL.PROP.BCOLOR = COLOR_BLACK;
  STEERING_WHEEL.PROP.COLOR_BAR_BACK = COLOR_BLUE;
  STEERING_WHEEL.PROP.COLOR_MARKER = COLOR_BLUE;
  STEERING_WHEEL.PROP.BCOLOR_MARKER = COLOR_WHITE;
  STEERING_WHEEL.PROP.COLOR_MARKER_LIMIT = COLOR_YELLOW;
  STEERING_WHEEL.PROP.POSY = 11;
  STEERING_WHEEL.PROP.POSX = 30;
  STEERING_WHEEL.PROP.BAR_SIZE = 45;
  STEERING_WHEEL.PROP.GUAGE_BAR = true;
  STEERING_WHEEL.PROP.MAX_VALUE = 180;
  STEERING_WHEEL.PROP.MIN_VALUE = 0;
  STEERING_WHEEL.PROP.MIN_MAX = true;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER = true;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER_BCOLOR = COLOR_BLUE;
  STEERING_WHEEL.PROP.MIN_MAX_FILLER_COLOR = COLOR_WHITE;
  STEERING_WHEEL.PROP.MIN_MAX_INDICATORS = false;
  STEERING_WHEEL.MIN_MAX_HISTORY.PROP.SLICES = 20;
  STEERING_WHEEL.MIN_MAX_HISTORY.PROP.TIME_SPAN = 60000;
  STEERING_WHEEL.PROP.COLORS_ON = true;

  // Steering Wheel Angle Text
  STEERING_WHEEL_ANGLE.PROP.POSX = 60;
  STEERING_WHEEL_ANGLE.PROP.POSY = 10;
  STEERING_WHEEL_ANGLE.PROP.SIZEX = 20;
  STEERING_WHEEL_ANGLE.PROP.COLORS_ON = true;
  STEERING_WHEEL_ANGLE.PROP.BCOLOR = COLOR_BLACK;
  STEERING_WHEEL_ANGLE.PROP.COLOR = COLOR_WHITE;
  STEERING_WHEEL_ANGLE.PROP.JUSTIFICATION_LEFT = true;

  //-----------




  //-----------


  //-----------


  //-----------

  // Raw Data
  AD_C8.PROP.POSX = 15;
  AD_C8.PROP.POSY = 18;
  AD_C8.PROP.SIZEX = 70;
  AD_C8.PROP.COLORS_ON = true;
  AD_C8.PROP.BCOLOR = COLOR_BLACK;
  AD_C8.PROP.COLOR = COLOR_WHITE;
  AD_C8.PROP.JUSTIFICATION_LEFT = true;

  AD_D0.PROP.POSX = 15;
  AD_D0.PROP.POSY = 19;
  AD_D0.PROP.SIZEX = 70;
  AD_D0.PROP.COLORS_ON = true;
  AD_D0.PROP.BCOLOR = COLOR_BLACK;
  AD_D0.PROP.COLOR = COLOR_WHITE;
  AD_D0.PROP.JUSTIFICATION_LEFT = true;

  AD_130.PROP.POSX = 15;
  AD_130.PROP.POSY = 20;
  AD_130.PROP.SIZEX = 70;
  AD_130.PROP.COLORS_ON = true;
  AD_130.PROP.BCOLOR = COLOR_BLACK;
  AD_130.PROP.COLOR = COLOR_WHITE;
  AD_130.PROP.JUSTIFICATION_LEFT = true;

  AD_200.PROP.POSX = 15;
  AD_200.PROP.POSY = 21;
  AD_200.PROP.SIZEX = 70;
  AD_200.PROP.COLORS_ON = true;
  AD_200.PROP.BCOLOR = COLOR_BLACK;
  AD_200.PROP.COLOR = COLOR_WHITE;
  AD_200.PROP.JUSTIFICATION_LEFT = true;

  AD_380.PROP.POSX = 15;
  AD_380.PROP.POSY = 22;
  AD_380.PROP.SIZEX = 70;
  AD_380.PROP.COLORS_ON = true;
  AD_380.PROP.BCOLOR = COLOR_BLACK;
  AD_380.PROP.COLOR = COLOR_WHITE;
  AD_380.PROP.JUSTIFICATION_LEFT = true;

  AD_218.PROP.POSX = 15;
  AD_218.PROP.POSY = 23;
  AD_218.PROP.SIZEX = 70;
  AD_218.PROP.COLORS_ON = true;
  AD_218.PROP.BCOLOR = COLOR_BLACK;
  AD_218.PROP.COLOR = COLOR_WHITE;
  AD_218.PROP.JUSTIFICATION_LEFT = true;

  AD_C0.PROP.POSX = 15;
  AD_C0.PROP.POSY = 24;
  AD_C0.PROP.SIZEX = 70;
  AD_C0.PROP.COLORS_ON = true;
  AD_C0.PROP.BCOLOR = COLOR_BLACK;
  AD_C0.PROP.COLOR = COLOR_WHITE;
  AD_C0.PROP.JUSTIFICATION_LEFT = true;

  AD_360.PROP.POSX = 15;
  AD_360.PROP.POSY = 25;
  AD_360.PROP.SIZEX = 70;
  AD_360.PROP.COLORS_ON = true;
  AD_360.PROP.BCOLOR = COLOR_BLACK;
  AD_360.PROP.COLOR = COLOR_WHITE;
  AD_360.PROP.JUSTIFICATION_LEFT = true;

  LF_SPEED.PROP.POSX = 3;
  LF_SPEED.PROP.POSY = 12;
  LF_SPEED.PROP.SIZEX = 5;
  LF_SPEED.PROP.COLORS_ON = true;
  LF_SPEED.PROP.BCOLOR = COLOR_BLACK;
  LF_SPEED.PROP.COLOR = COLOR_WHITE;
  LF_SPEED.PROP.JUSTIFICATION_LEFT = true;

  RF_SPEED.PROP.POSX = 10;
  RF_SPEED.PROP.POSY = 12;
  RF_SPEED.PROP.SIZEX = 5;
  RF_SPEED.PROP.COLORS_ON = true;
  RF_SPEED.PROP.BCOLOR = COLOR_BLACK;
  RF_SPEED.PROP.COLOR = COLOR_WHITE;
  RF_SPEED.PROP.JUSTIFICATION_LEFT = true;

  LB_SPEED.PROP.POSX = 3;
  LB_SPEED.PROP.POSY = 15;
  LB_SPEED.PROP.SIZEX = 5;
  LB_SPEED.PROP.COLORS_ON = true;
  LB_SPEED.PROP.BCOLOR = COLOR_BLACK;
  LB_SPEED.PROP.COLOR = COLOR_WHITE;
  LB_SPEED.PROP.JUSTIFICATION_LEFT = true;

  RB_SPEED.PROP.POSX = 10;
  RB_SPEED.PROP.POSY = 15;
  RB_SPEED.PROP.SIZEX = 5;
  RB_SPEED.PROP.COLORS_ON = true;
  RB_SPEED.PROP.BCOLOR = COLOR_BLACK;
  RB_SPEED.PROP.COLOR = COLOR_WHITE;
  RB_SPEED.PROP.JUSTIFICATION_LEFT = true;

  LF_SPEED_OFFSET.PROP.POSX = 3;
  LF_SPEED_OFFSET.PROP.POSY = 13;
  LF_SPEED_OFFSET.PROP.SIZEX = 5;
  LF_SPEED_OFFSET.PROP.COLORS_ON = true;
  LF_SPEED_OFFSET.PROP.BCOLOR = COLOR_BLACK;
  LF_SPEED_OFFSET.PROP.COLOR = COLOR_WHITE;
  LF_SPEED_OFFSET.PROP.JUSTIFICATION_LEFT = true;

  RF_SPEED_OFFSET.PROP.POSX = 10;
  RF_SPEED_OFFSET.PROP.POSY = 13;
  RF_SPEED_OFFSET.PROP.SIZEX = 5;
  RF_SPEED_OFFSET.PROP.COLORS_ON = true;
  RF_SPEED_OFFSET.PROP.BCOLOR = COLOR_BLACK;
  RF_SPEED_OFFSET.PROP.COLOR = COLOR_WHITE;
  RF_SPEED_OFFSET.PROP.JUSTIFICATION_LEFT = true;

  LB_SPEED_OFFSET.PROP.POSX = 3;
  LB_SPEED_OFFSET.PROP.POSY = 16;
  LB_SPEED_OFFSET.PROP.SIZEX = 5;
  LB_SPEED_OFFSET.PROP.COLORS_ON = true;
  LB_SPEED_OFFSET.PROP.BCOLOR = COLOR_BLACK;
  LB_SPEED_OFFSET.PROP.COLOR = COLOR_WHITE;
  LB_SPEED_OFFSET.PROP.JUSTIFICATION_LEFT = true;

  RB_SPEED_OFFSET.PROP.POSX = 10;
  RB_SPEED_OFFSET.PROP.POSY = 16;
  RB_SPEED_OFFSET.PROP.SIZEX = 5;
  RB_SPEED_OFFSET.PROP.COLORS_ON = true;
  RB_SPEED_OFFSET.PROP.BCOLOR = COLOR_BLACK;
  RB_SPEED_OFFSET.PROP.COLOR = COLOR_WHITE;
  RB_SPEED_OFFSET.PROP.JUSTIFICATION_LEFT = true;
}

void AUTOMOBILE_GADGET::update(system_data &sdSysData, unsigned long &tmeCurrentMillis)
{

  sdSysData.CAR_INFO.translate();
  
  //--

  MESSAGES.set_text(to_string(sdSysData.CAR_INFO.message_count));

  AD_UNKNOWN.set_text(sdSysData.CAR_INFO.DATA.AD_UNKNOWN.ORIG);

  //-----------

  SPEEDOMETER.update(sdSysData.CAR_INFO.STATUS.SPEED.val_mph(), tmeCurrentMillis);
  SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.mph());
  GEAR.set_text(sdSysData.CAR_INFO.STATUS.GEAR.long_desc());
  SPEEDOMETER_MIN.set_text(to_string(SPEEDOMETER.MIN_MAX_HISTORY.min()));
  SPEEDOMETER_MAX.set_text(to_string(SPEEDOMETER.MIN_MAX_HISTORY.max()));

  //-----------

  RPM_GUAGE.update(sdSysData.CAR_INFO.STATUS.RPM.val_rpm(), tmeCurrentMillis);
  RPM.set_text(sdSysData.CAR_INFO.STATUS.RPM.rpm());
  RPM_MIN.set_text(to_string(RPM_GUAGE.MIN_MAX_HISTORY.min()));
  RPM_MAX.set_text(to_string(RPM_GUAGE.MIN_MAX_HISTORY.max()));

  //-----------

  POWER_LOAD_GUAGE.update(sdSysData.CAR_INFO.STATUS.POWER.val_load(), tmeCurrentMillis);
  POWER_LOAD.set_text(sdSysData.CAR_INFO.STATUS.POWER.load());
  POWER_LOAD_MIN.set_text(to_string(POWER_LOAD_GUAGE.MIN_MAX_HISTORY.min()));
  POWER_LOAD_MAX.set_text(to_string(POWER_LOAD_GUAGE.MIN_MAX_HISTORY.max()));

  //-----------
  STEERING_WHEEL.update(sdSysData.CAR_INFO.STATUS.STEERING.val_steering_wheel_angle(), tmeCurrentMillis);
  STEERING_WHEEL_ANGLE.set_text(sdSysData.CAR_INFO.STATUS.STEERING.left_of_center() + " " + 
                                  sdSysData.CAR_INFO.STATUS.STEERING.turning_direction() + " " + 
                                  sdSysData.CAR_INFO.STATUS.STEERING.steering_wheel_angle());
  //-----------


  //-----------

  AD_C8.set_text("Lamp Ign PB: " + sdSysData.CAR_INFO.DATA.AD_C8.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.INDICATORS.lights() + " " + 
                                    sdSysData.CAR_INFO.STATUS.INDICATORS.parking_brake());
  AD_D0.set_text(" Gear Lever: " + sdSysData.CAR_INFO.DATA.AD_D0.ORIG);
  AD_130.set_text("      Speed: " + sdSysData.CAR_INFO.DATA.AD_130.ORIG);
  AD_200.set_text("  Fuel Cons: " + sdSysData.CAR_INFO.DATA.AD_200.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.consumed());
  AD_380.set_text(" Fuel Level: " + sdSysData.CAR_INFO.DATA.AD_380.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.level());
  AD_218.set_text("       Odom: " + sdSysData.CAR_INFO.DATA.AD_218.ORIG);
  AD_C0.set_text("      Fuel%: " + sdSysData.CAR_INFO.DATA.AD_C0.ORIG + " " + 
                                    sdSysData.CAR_INFO.STATUS.FUEL.percentage());
  AD_360.set_text(" Drs and HB: " + sdSysData.CAR_INFO.DATA.AD_360.ORIG + " " +
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.lf_door_open()) + 
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.rf_door_open()) + 
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.lb_door_open()) + 
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.rb_door_open()) + 
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.hatchback_door_open()) + 
                                      to_string(sdSysData.CAR_INFO.STATUS.DOORS.hood_door_open())        );

  //-----------

  LF_SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.LF_mph());
  RF_SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.RF_mph());
  LB_SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.LB_mph());
  RB_SPEED.set_text(sdSysData.CAR_INFO.STATUS.SPEED.RB_mph());

  LF_SPEED_OFFSET.set_text(sdSysData.CAR_INFO.CALCULATED.LF_WHEEL_SPEED_OFFSET.mph());
  RF_SPEED_OFFSET.set_text(sdSysData.CAR_INFO.CALCULATED.RF_WHEEL_SPEED_OFFSET.mph());
  LB_SPEED_OFFSET.set_text(sdSysData.CAR_INFO.CALCULATED.LB_WHEEL_SPEED_OFFSET.mph());
  RB_SPEED_OFFSET.set_text(sdSysData.CAR_INFO.CALCULATED.RB_WHEEL_SPEED_OFFSET.mph());

  //-----------

  sdSysData.CAR_INFO.CHANGED = false;
  CHANGED = true;
}

bool AUTOMOBILE_GADGET::draw(bool Refresh, unsigned long tmeFrame_Time)
{
  if (CHANGED == false)
  {

  }

  MESSAGES.draw(AUTOMOBILE_PANEL, Refresh);

  AD_UNKNOWN.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------
  // Speedometer and Gear
  SPEEDOMETER_DESC.draw(AUTOMOBILE_PANEL, Refresh);
  SPEEDOMETER.draw(AUTOMOBILE_PANEL, Refresh);
  SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  GEAR.draw(AUTOMOBILE_PANEL, Refresh);
  SPEEDOMETER_MIN.draw(AUTOMOBILE_PANEL, Refresh);
  SPEEDOMETER_MAX.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  RPM_DESC.draw(AUTOMOBILE_PANEL, Refresh);
  RPM_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  RPM.draw(AUTOMOBILE_PANEL, Refresh);
  RPM_MIN.draw(AUTOMOBILE_PANEL, Refresh);
  RPM_MAX.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  POWER_LOAD_DESC.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD_GUAGE.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD_MIN.draw(AUTOMOBILE_PANEL, Refresh);
  POWER_LOAD_MAX.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  STEERING_WHEEL_DESC.draw(AUTOMOBILE_PANEL, Refresh);
  STEERING_WHEEL.draw(AUTOMOBILE_PANEL, Refresh);
  STEERING_WHEEL_ANGLE.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------



  //-----------


  //-----------

  AD_C8.draw(AUTOMOBILE_PANEL, Refresh);
  AD_D0.draw(AUTOMOBILE_PANEL, Refresh);
  AD_130.draw(AUTOMOBILE_PANEL, Refresh);
  AD_200.draw(AUTOMOBILE_PANEL, Refresh);
  AD_380.draw(AUTOMOBILE_PANEL, Refresh);
  AD_218.draw(AUTOMOBILE_PANEL, Refresh);
  AD_C0.draw(AUTOMOBILE_PANEL, Refresh);
  AD_360.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  LF_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  RF_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  LB_SPEED.draw(AUTOMOBILE_PANEL, Refresh);
  RB_SPEED.draw(AUTOMOBILE_PANEL, Refresh);

  LF_SPEED_OFFSET.draw(AUTOMOBILE_PANEL, Refresh);
  RF_SPEED_OFFSET.draw(AUTOMOBILE_PANEL, Refresh);
  LB_SPEED_OFFSET.draw(AUTOMOBILE_PANEL, Refresh);
  RB_SPEED_OFFSET.draw(AUTOMOBILE_PANEL, Refresh);

  //-----------

  AUTOMOBILE_PANEL.draw(Refresh);

  CHANGED = false;
  return false;
}


#endif