Standard Event:

teEvent[ StripID ].set( strIdentity , tmeCurrentTime , StartInTime, Duration, Speed , 
AnimationType , Pixel Animation Type, 
Start 1 , Dest 1 , Start 2, Dest 2, 
Pix Start Pos, Pix End Pos, Repeat, Clear on End);

StripID - ID
strIdentity     - Animation text identifier for reference.
tmeCurrentTime  - Time event was Created.
StartInTime     - How long to wait before starting animation.
Duration        - How long the Pixel Animation runs.
---
Pix Start Pos   - Channel pixel start pos
Pix End Pos     - Channel pixel start pos
Repeat          - Animation repeats continuously.
Clear on End    - Animtion Clears itself on end.



System Animation Types:

AnEvClear - Clears and Ends all events at a specific time. 
    Example:
        teEvent[0].set("Nothing", tmeCurrentMillis, X, 0, 0, AnEvClear, 0, CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), X, X, false, false);
    
    Params:
        StartInTime - How long to wait before starting animation.
        Start Pos   - Only Clear Events that have interactions within Start and End Pos.
        End Pos     - Only Clear Events that have interactions within Start and End Pos.

AnEvClearRunning - Clears and Ends all currently running events at a specific time. 
                    Events not started will be preserved. 
    Example:
        teEvent[0].set("Nothing", tmeCurrentMillis, X, 0, 0, AnEvClear, 0, CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), X, X, false, false);
    
    Params:
        StartInTime - How long to wait before starting animation.
        Start Pos   - Only Clear Events that have interactions within Start and End Pos.
        End Pos     - Only Clear Events that have interactions within Start and End Pos.

AnEvSchedule - Schedules a stored system event to be called at a specific time.  i.e. Pulse Animations.
                Nesting animations can be made.  Fore example, a Pulse Animation can call itself at the end of 
                its cycle.  Depending on its implementation, parameteres, such as color, can also be passed. 
    Example:
        teEvent[0].set("Nothing", tmeCurrentMillis, X, 0, 0, AnEvSchedule, AnTaDoorCloseBack, CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(0, 0, 0), X, X, false, false);

    Params:
        StartInTime - How long to wait before starting animation.
        Duration    - When Repeat is true, this is the amount of time delayed 
                        between each repeat. 
        PARAM6      - Event anmation to call.
        Start Pos   - ????? Unknown
        End Pos     - ????? Unknown
        Repeat      - Controls end behavior of the Event Repeat.
            False:  Event will clear as it is called
            True:   Event will wait for the value of the Duration and will 
                        call itself again, indefinitely or untill the event 
                        is set to end by another event.



AnEvSetToEnd - Sets a current animation or sheduled event to end.  Useful for stopping repeating animations.

    Example:
        teEvent[0].set("IDENTITY", tmeCurrentMillis, X, X, 0, AnEvSchedule, AnEvSetToEnd, CRGB(0, 0, 0), CRGB(0, 0, 0), CRGB(X, X, X), CRGB(X, X, X), X, X, false, false);
    
    If booRepeat set to true then pulse animations will continue till end of cycle.
    If not a pulse (static fade in left on) then the color will fade out over duration and speed,
        as if it was a fade on.
    Identity works as a serach function, If not empty or "", then only animations with text that match value passed will be set to end.
    Start Color 1 works as a search function. If not CRGB(0, 0, 0) then only animations with CRGB value passed will be set to end.
        The search Identity or Color 1 acts as an OR condition.  If either match then the event will be set to end.
    Ending a schedule event can use the search criteria as normal.

    Warning: regardless of search and end params, the event still needs to be within the range.

    Params:
        ""          - "" for all, or set "XXXXX" with specific text of whatever is in between the quotes, will set to end.
        StartInTime - How long to wait before starting animation.
        Duration    - How long the Pixel Animation runs.
        Start Color - CRGB(0, 0, 0) for all,  or CRGB(X,X,X) with specific color X,X,X will be set to end.
        Start Pos   - Only events between Start 
        End Pos     -   and End will end.
        Repeat      - Controls end behavior of animations that repeat.
            False:  Existing pulse animations will just end.
            True:   Existing pulse animations will continue till it gets to its end. 
        Clear on End- Controls end behavior of currently running events all all events. 
            False:  Set only currently running events to end.
            True:   Set to end events scheduled in the future to end also.


Note:
??????  - I don't know if this is working right.
          This is untested.
          I don't know why this is like this.

!!!!!!  - This may work, but I doubt that the results will 
            be appealing.
          Maybe untested, non the less. 
